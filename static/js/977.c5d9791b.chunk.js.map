{"version":3,"file":"static/js/977.c5d9791b.chunk.js","mappings":"6NAqBA,EAlBe,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OACb,oBAASC,UAAU,mBAAnB,UACE,+BACE,eAAIA,UAAU,SAAd,SAAwBD,EAAKE,UAC7B,eAAGD,UAAU,SAAb,WAAsB,cAAGE,KAAMH,EAAKI,KAAd,SAAqBJ,EAAKK,SAAhD,KAA8DL,EAAKM,YAJ1D,ECETC,EAAY,SAAC,GAAD,IAAGP,EAAH,EAAGA,KAAH,OAChB,iBAAKC,UAAU,YAAf,WACE,gBAAKA,UAAU,UAAUO,GAAG,eAC5B,gBAAKP,UAAU,QAAf,UACE,wCAEDD,EAAKS,KAAI,SAACP,GAAD,OACR,SAAC,EAAD,CACEF,KAAME,GACDA,EAAOG,OAHN,MANI,EAwBlBE,EAAUG,aAAe,CACvBV,KAAM,IAGR,QCJA,EA1BY,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OACV,qBAASC,UAAU,iBAAnB,WACE,+BACE,2BAAI,cAAGE,KAAMH,EAAKI,KAAd,SAAqBJ,EAAKW,UAA9B,MAA8CX,EAAKY,aACnD,eAAGX,UAAU,YAAb,cAA2BD,EAAKa,cAChC,eAAGZ,UAAU,YAAb,cAA2BD,EAAKc,gBAElC,eAAIb,UAAU,SAAd,SACGD,EAAKe,OAAON,KAAI,SAACO,GAAD,OACf,wBAAiBA,GAARA,EADM,QARX,ECENC,EAAa,SAAC,GAAD,IAAGjB,EAAH,EAAGA,KAAH,OACjB,iBAAKC,UAAU,aAAf,WACE,gBAAKA,UAAU,UAAUO,GAAG,gBAC5B,gBAAKP,UAAU,QAAf,UACE,yCAEDD,EAAKS,KAAI,SAACS,GAAD,OACR,SAAC,EAAD,CACElB,KAAMkB,GACDA,EAAIP,QAHH,MANK,EAyBnBM,EAAWP,aAAe,CACxBV,KAAM,IAGR,QCpBA,EAXmB,kBACjB,iBAAKC,UAAU,aAAf,WACE,gBAAKA,UAAU,UAAUO,GAAG,gBAC5B,gBAAKP,UAAU,QAAf,UACE,SAAC,KAAD,CAAMkB,GAAG,WAAT,UACE,oEALW,ECenB,EAlBgB,CACd,CACEd,OAAQ,eACRH,OAAQ,wDACRI,KAAM,MAER,CACED,OAAQ,qBACRH,OAAQ,+CACRI,KAAM,MAER,CACED,OAAQ,oCACRH,OAAQ,uCACRI,KAAM,OCwBV,EAtCkB,CAChB,CACEK,QAAS,eACTC,SAAU,oBACVE,SAAU,6BACVV,KAAM,4BACNS,UAAW,yBACXE,OAAQ,CACN,0LAGJ,CACEJ,QAAS,oBACTC,SAAU,+BACVE,SAAU,6BACVV,KAAM,0BACNS,UAAW,6BACXE,OAAQ,CACN,qKACA,yDAGJ,CACEJ,QAAS,oCACTC,SAAU,2BACVE,SAAU,uCACVD,UAAW,wBACXE,OAAQ,CACN,yGACA,iGACA,yGACA,0IACA,mHACA,wKCrBAK,EAAW,CACf,YACA,aACA,cA6BF,EA1Be,kBACb,SAACC,EAAA,EAAD,CACEC,MAAM,SACNC,YAAY,yBAFd,UAIE,qBAAStB,UAAU,OAAOO,GAAG,SAA7B,WACE,6BACE,iBAAKP,UAAU,QAAf,WACE,eAAI,cAAY,UAAhB,UAA0B,SAAC,KAAD,CAAMkB,GAAG,SAAT,uBAC1B,gBAAKlB,UAAU,iBAAf,SACGmB,EAASX,KAAI,SAACe,GAAD,OACZ,yBACE,cAAGrB,KAAI,WAAMqB,EAAIC,eAAjB,SAAmCD,KAD5BA,EADG,YAQpB,SAAC,EAAD,CAAWxB,KAAM0B,KACjB,SAAC,EAAD,CAAY1B,KAAM2B,KAClB,SAAC,EAAD,QApBS,C","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/References.js","data/resume/degrees.js","data/resume/positions.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Degree = ({ data }) => (\r\n  <article className=\"degree-container\">\r\n    <header>\r\n      <h4 className=\"degree\">{data.degree}</h4>\r\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\r\n    </header>\r\n  </article>\r\n);\r\n\r\nDegree.propTypes = {\r\n  data: PropTypes.shape({\r\n    degree: PropTypes.string.isRequired,\r\n    link: PropTypes.string.isRequired,\r\n    school: PropTypes.string.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Degree;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Degree from './Education/Degree';\r\n\r\nconst Education = ({ data }) => (\r\n  <div className=\"education\">\r\n    <div className=\"link-to\" id=\"education\" />\r\n    <div className=\"title\">\r\n      <h3>Education</h3>\r\n    </div>\r\n    {data.map((degree) => (\r\n      <Degree\r\n        data={degree}\r\n        key={degree.school}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nEducation.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.shape({\r\n    school: PropTypes.string,\r\n    degree: PropTypes.string,\r\n    link: PropTypes.string,\r\n    year: PropTypes.number,\r\n  })),\r\n};\r\n\r\nEducation.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nexport default Education;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Job = ({ data }) => (\r\n  <article className=\"jobs-container\">\r\n    <header>\r\n      <h4><a href={data.link}>{data.company}</a> - {data.position}</h4>\r\n      <p className=\"daterange\"> {data.daterange}</p>\r\n      <p className=\"daterange\"> {data.location}</p>\r\n    </header>\r\n    <ul className=\"points\">\r\n      {data.points.map((point) => (\r\n        <li key={point}>{point}</li>\r\n      ))}\r\n    </ul>\r\n  </article>\r\n);\r\n\r\nJob.propTypes = {\r\n  data: PropTypes.shape({\r\n    link: PropTypes.string.isRequired,\r\n    company: PropTypes.string.isRequired,\r\n    position: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    daterange: PropTypes.string.isRequired,\r\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Job;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Job from './Experience/Job';\r\n\r\nconst Experience = ({ data }) => (\r\n  <div className=\"experience\">\r\n    <div className=\"link-to\" id=\"experience\" />\r\n    <div className=\"title\">\r\n      <h3>Experience</h3>\r\n    </div>\r\n    {data.map((job) => (\r\n      <Job\r\n        data={job}\r\n        key={job.company}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nExperience.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.shape({\r\n    company: PropTypes.string,\r\n    position: PropTypes.string,\r\n    link: PropTypes.string,\r\n    daterange: PropTypes.string,\r\n    points: PropTypes.arrayOf(PropTypes.string),\r\n  })),\r\n};\r\n\r\nExperience.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nexport default Experience;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst References = () => (\r\n  <div className=\"references\">\r\n    <div className=\"link-to\" id=\"references\" />\r\n    <div className=\"title\">\r\n      <Link to=\"/contact\">\r\n        <h4>References available upon request</h4>\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default References;\r\n","const degrees = [\r\n  {\r\n    school: 'Hack Reactor',\r\n    degree: 'Full-Stack Software Engineering Immersive Certificate',\r\n    year: 2022,\r\n  },\r\n  {\r\n    school: 'Arcadia University',\r\n    degree: 'Doctor of Physical Therapy, With distinction',\r\n    year: 2015,\r\n  },\r\n  {\r\n    school: 'The Pennsylvania State University',\r\n    degree: 'B.S. in Kinesiology, Magna cum laude',\r\n    year: 2012,\r\n  },\r\n];\r\n\r\nexport default degrees;\r\n","const positions = [\r\n  {\r\n    company: 'Health Union',\r\n    position: 'Software Engineer',\r\n    location: 'Remote - San Francisco, CA',\r\n    link: 'https://health-union.com/',\r\n    daterange: 'January 2023 - Present',\r\n    points: [\r\n      'Implemented dynamic front-end experiences (VueJS), efficient data querying (Apollo GraphQL), and robust back-end support (Elixir/Phoenix) for key feature development and improvement',\r\n    ],\r\n  },\r\n  {\r\n    company: 'Personal Projects',\r\n    position: 'Full-stack Software Engineer',\r\n    location: 'Remote - San Francisco, CA',\r\n    link: 'https://hackreactor.com',\r\n    daterange: 'April 2022 - December 2022',\r\n    points: [\r\n      'Applied concepts of domain-driven design to develop multiple microservice-based application using RESTful API framework with a Django back-end and React front-end',\r\n      'Used postgreSQL and MongoDB databases to store data ',\r\n    ],\r\n  },\r\n  {\r\n    company: 'Multiple physical therapy clinics',\r\n    position: 'Staff Physical Therapist',\r\n    location: 'Allentown, PA, Boston, San Francisco',\r\n    daterange: 'May 2015 - April 2022',\r\n    points: [\r\n      'Authored an article about repetitive stress injury, published in ADVANCE for Physical Therapy magazine',\r\n      'Developed a treatment manual and continuing education coursework to teach treatment techniques',\r\n      'Held the role of clinical instructor to a physical therapy student for a full-time clinical experience',\r\n      'Attended continuing education courses to remain informed of best evidence-based practices and presented the information to clinic staff',\r\n      'Discussed patient progress with top surgeons and specialists in the country to ensure comprehensive patient care',\r\n      'Worked closely with administrative staff to ensure insurance coverage of services for patients and performed written and/or verbal appeals if services were denied',\r\n    ],\r\n  },\r\n];\r\n\r\nexport default positions;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Main from '../layouts/Main';\r\n\r\nimport Education from '../components/Resume/Education';\r\nimport Experience from '../components/Resume/Experience';\r\nimport References from '../components/Resume/References';\r\n\r\nimport degrees from '../data/resume/degrees';\r\nimport positions from '../data/resume/positions';\r\n\r\nconst sections = [\r\n  'Education',\r\n  'Experience',\r\n  'References',\r\n];\r\n\r\nconst Resume = () => (\r\n  <Main\r\n    title=\"Resume\"\r\n    description=\"Mary McKinnon's Resume\"\r\n  >\r\n    <article className=\"post\" id=\"resume\">\r\n      <header>\r\n        <div className=\"title\">\r\n          <h2 data-testid=\"heading\"><Link to=\"resume\">Resume</Link></h2>\r\n          <div className=\"link-container\">\r\n            {sections.map((sec) => (\r\n              <h4 key={sec}>\r\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\r\n              </h4>))}\r\n          </div>\r\n\r\n        </div>\r\n      </header>\r\n      <Education data={degrees} />\r\n      <Experience data={positions} />\r\n      <References />\r\n\r\n    </article>\r\n  </Main>\r\n);\r\n\r\nexport default Resume;\r\n"],"names":["data","className","degree","href","link","school","year","Education","id","map","defaultProps","company","position","daterange","location","points","point","Experience","job","to","sections","Main","title","description","sec","toLowerCase","degrees","positions"],"sourceRoot":""}